---

---

<section class="hero">
  <h1 class="visually-hidden">SeeEnso - Digital Agency</h1>
  <picture class="hero__picture">
    <source
      type="image/webp"
      srcset="/images/hero/hero-bg.webp 1x,
              /images/hero/hero-bg@2x.webp 2x,
              /images/hero/hero-bg@3x.webp 3x," >
    <source
      type="image/jpeg"
      srcset="" >
    <img src="/images/hero/hero-bg.jpg" alt="" width="1920" height="1080">
  </picture>
  <img class="logo-main" src="/images/hero/see-enso-da-hero.svg" alt="See Enso Digital Agency">
  <div class="deco">
    <img style="--delay: 750ms;" src="/images/hero/halo-l-1.svg" alt="" width="800" height="800">
    <img style="--delay: 650ms;" src="/images/hero/halo-l-2.svg" alt="" width="800" height="800">
    <img style="--delay: 550ms;" src="/images/hero/halo-l-3.svg" alt="" width="800" height="800">
    <img style="--delay: 450ms;" src="/images/hero/halo-l-4.svg" alt="" width="800" height="800">
    <img style="--delay: 350ms;" src="/images/hero/halo-l-5.svg" alt="" width="800" height="800">
  </div>
</section>

<style is:global>
  .hero {
    display: grid;
    max-width: 100%;
    height: 100vh; 
    grid-template-areas: 'hero';
    place-items: center;
    place-content: center;
    overflow-x: clip;
  }

  .hero__picture {
    grid-area: hero;
    width: 100%;
    height: 100%;
  }

  .hero__picture img {
    width: 100%;
    height: 100%;
    /* min-height: 100dvh; */
    object-fit: cover;
    object-position: center center;
  }

  .logo-main {
    grid-area: hero;
    width: min(75vw, 320px);
  }

  @property --z-offset {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
  }

  .deco {
    --deco-scale: 0.86;
    grid-area: hero;
    display: grid;
    grid-template-areas: deco;
    place-items: center;
    transform-origin: center;
    transform:
              translateY(50px)
              scale(var(--deco-scale));
    perspective: 1200px;
    scale: var(--deco-scale);
    z-index: 10;
  }

  .deco > img {
    --z-offset: 0px;
    grid-area: deco;
    min-width: fit-content;
    aspect-ratio: 1;
    animation: kfPerspectiveTranslate 2.2s infinite ease alternate;
    animation-delay: var(--delay, 0s);
    transform: translateZ(var(--z-offset));
  }

@media (width > 90rem ) {
  .deco {
    --deco-scale: 1;
  }
}


@keyframes kfPerspectiveTranslate {
  to {
    --z-offset: 100px;
  }
}
</style>