---
import CommercialsList from '@components/section-recent-commercials/CommercialsList.astro';
import CommercialCardSkeleton from './CommercialCardSkeleton.astro';
---

<section id="recent-commercials" class="recent-commercials">
  <div class="container recent-commercials__container" >
    <h2 class="section__heading recent-commercials__heading" animation-title><span animation-title="odd">подивитись <span class="accent" animation-title="accent">останні</span></span><span animation-title="even">зйомки</span></h2>
    <div class="slider" data-slider="commercial" animation-slider>
      <div class="slider__control-panel" animation-slider="controls">
          <button class="control-panel__button" data-button-backward aria-label="гортати назад"><img src="/images/arrow.svg" alt=""></button>
          <button class="control-panel__button" data-button-forward aria-label="гортати вперед"><img src="/images/arrow.svg" alt=""></button>
      </div>
      <div class="slider__container" data-slider-track animation-slider="track">
        <div class="slider__track" data-commercials>
          <CommercialsList server:defer >
            <CommercialCardSkeleton slot='fallback' indication/>
            <CommercialCardSkeleton slot='fallback' indication/>
            <CommercialCardSkeleton slot='fallback' indication/>
          </CommercialsList>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import {initSlider} from '../../scripts/slider.ts'
  initSlider('commercial', { autoVHConvertion: false, wheelSensitivityMultiplier: 6, slideShift: 400})

  const commercialsEl = document.querySelector<HTMLDivElement>('[data-commercials]')
  if (commercialsEl) {
    commercialsEl.addEventListener('click', onVideoClick)
  }


  function onVideoClick({target}: Event) {
    if (target && ("tagName" in target) && target.tagName === "BUTTON") {    
      // @ts-ignore
      const { videoId } = target.dataset
      const videoEl = document.querySelector(`[data-video-id="${videoId}"]`)
      if (videoEl) {
        const title = videoEl.querySelector('figcaption')!.getAttribute('aria-label') || ""
        const player = youtubePlayer(videoId, title)
        videoEl.replaceChildren(player)
      }
    }
  }

  function youtubePlayer(videoId: string, title: string) {
    const player = document.createElement('iframe');
    player.setAttribute("width", "640");
    player.setAttribute("height", "480");
    player.setAttribute("src", `https://www.youtube.com/embed/${videoId}`);
    player.setAttribute("title", `${title}`);
    player.setAttribute("frameborder", "0");
    player.setAttribute("allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share");
    player.setAttribute("referrerpolicy", "strict-origin-when-cross-origin");
    player.setAttribute("allowfullscreen", "");
    player.style.width = "100%";
    player.style.height = "100%";
    player.style.aspectRatio = "16/9";
    return player;
  }
</script>

<style is:global>
.recent-commercials {
  overflow-x: clip;
}
.recent-commercials__container {
  margin-block-start: var(--section-interval);
}

.recent-commercials__heading {
  display: grid;
  width: 24ch;

  & > span + span {
    place-self: end;
  }

  @media (width > 26.5625rem) {
    margin-inline: auto;
  }
}
</style>