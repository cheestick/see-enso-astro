---

---

  <button 
    class="nav__burger" 
    type="button" 
    aria-label="показати меню"
    aria-expanded="false"
    aria-controls="navbar"
    data-burger 
  >
    <span class="icon-burger"></span>
    <span class="icon-close"></span>
  </button>

<script>
  const bodyDirectChildren = document.body.querySelectorAll('body > * + *')
  const navigation = document.querySelector('[data-navigation]')
  const navLinks = navigation?.querySelectorAll('nav a.navlink')
  const btnBurger = document.querySelector('[data-burger]') as HTMLButtonElement
  const iconBurger = document.querySelector('.icon-burger') as HTMLSpanElement
  const iconClose = document.querySelector('.icon-close') as HTMLSpanElement

  const media = window?.matchMedia("(width <= 35em)")

  function updateNavbar(needUpdate: boolean) {
      if (needUpdate) {
          navigation?.setAttribute('inert', '')
          navigation?.addEventListener('click', hideMenu)
          navLinks?.forEach(link => link.addEventListener('click', hideMenu))
      } else {
          navigation?.removeAttribute('inert')
          navigation?.removeEventListener('click', hideMenu)
          navLinks?.forEach(link => link.removeEventListener('click', hideMenu))
      }
  }

  // function updateNavLinks(needUpdate: boolean) {
  //     if (needUpdate) {
  //         navLinks?.forEach(link => link.addEventListener('click', hideMenu))
  //     } else {
  //         navLinks?.forEach(link => link.removeEventListener('click', hideMenu))
  //     }
  // }

  // function updateBurgerButton(needUpdate: boolean) {
  //     if (needUpdate) {

  //     } else {
        
  //     }
  // }

  function toggleDirectChildrenInertAttribute(directChildren: NodeListOf<HTMLElement>) {
    const attribute = 'inert'
    const hasInertAttribute = (el: HTMLElement) => el.hasAttribute(attribute)
    const toggleAttribute = (el: HTMLElement) => { 
        if (hasInertAttribute(el)) {  el.removeAttribute(attribute) } 
        else {  el.setAttribute(attribute, '') }
    }
        
      directChildren.forEach(toggleAttribute)
}

  function showMenu() {
      bodyDirectChildren?.forEach(el => el.setAttribute('inert', ''))
      navigation?.classList.add('show-navigation')
      navigation?.removeAttribute('inert')
      btnBurger.setAttribute('aria-expanded', 'true')
      btnBurger.setAttribute('aria-label', "сховати меню")
      iconBurger.style.display = 'none'
      iconClose.style.display = 'block'
  }

  function hideMenu() {
      bodyDirectChildren?.forEach(el => el.removeAttribute('inert'))
      navigation?.classList.remove('show-navigation')
      navigation?.setAttribute('inert', '')
      btnBurger.setAttribute('aria-expanded', 'false')
      btnBurger.setAttribute('aria-label', "показати меню")
      iconBurger.style.display = 'block'
      iconClose.style.display = 'none'
  }

  function toggleMenu() {
    const isMenuOpened = navigation?.classList.contains('show-navigation')
      if (!isMenuOpened) {  showMenu()  }
      else {  hideMenu()  }
  }

  function onMediaQueryChange(e: MediaQueryListEvent) {
      updateNavbar(e.matches)
  }

  function onScreenOrientationChange(e: Event) {
      const screen = e.target
      if (screen && 'type' in screen) {
          const isScreenOrientationLandscape = screen.type === 'landscape-primary' || 'landscape-secondary'     
          if (!isScreenOrientationLandscape) return

          hideMenu()
      }
  }

    updateNavbar(media.matches)
    btnBurger?.addEventListener('click', toggleMenu)
    media.addEventListener('change', onMediaQueryChange)
    screen.orientation.addEventListener('change', onScreenOrientationChange)
</script>

<style is:global>
  .nav__burger {
    --width: 63px;
    --height: 42px;
    --radius: calc(var(--height) / 2);
      width: var(--width);
      height: var(--height);
      background-color: var(--color-burger);
      border: 0;
      border-radius: var(--radius);
      overflow: hidden;
      z-index: 110;
  }


  .icon-burger, .icon-close {
      display: inline-block;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
      background-position: center;
  }
  .icon-burger {
      background-image: url("/images/icons/menu-burger.svg");
  }
  .icon-close {
      background-image: url("/images/icons/menu-cross.svg");
  }

  /* 29.75em */
@media screen and (width > 35rem) {
  .nav__burger {
      display: none;
  }
} 
</style>