---

---

  <button 
    class="nav__burger" 
    type="button" 
    aria-label="показати меню"
    aria-expanded="false"
    aria-controls="navbar"
    data-burger 
  >
    <span class="icon-burger"></span>
    <span class="icon-close"></span>
  </button>

<script>
  const bodyDirectChildren = document.body.querySelectorAll<HTMLElement>('body > * + *')
  const navigation = document.querySelector<HTMLElement>('[data-navigation]')
  const navLinks = navigation?.querySelectorAll<HTMLAnchorElement>('nav a.navlink')
  const btnBurger = document.querySelector<HTMLButtonElement>('[data-burger]') 
  const iconBurger = document.querySelector<HTMLSpanElement>('.icon-burger')
  const iconClose = document.querySelector<HTMLSpanElement>('.icon-close')
  
  const MEDIA_MOBILE = '(width <= 35em)'
  const media = window?.matchMedia(MEDIA_MOBILE)

  const isMenuOpened = () => navigation?.classList.contains('show-navigation')

  // function updateNavLinks(needUpdate: boolean) {
  //     if (needUpdate) {
  //         navLinks?.forEach(link => link.addEventListener('click', hideMenu))
  //     } else {
  //         navLinks?.forEach(link => link.removeEventListener('click', hideMenu))
  //     }
  // }

  // function updateBurgerButton(needUpdate: boolean) {
  //     if (needUpdate) {

  //     } else {
        
  //     }
  // }

  // function toggleDirectChildrenInertAttribute(directChildren: NodeListOf<HTMLElement>) {
  //   const attribute = 'inert'
  //   const hasInertAttribute = (el: HTMLElement) => el.hasAttribute(attribute)
  //   const toggleAttribute = (el: HTMLElement) => { 
  //       if (hasInertAttribute(el)) {  el.removeAttribute(attribute) } 
  //       else {  el.setAttribute(attribute, '') }
  //   }
        
  //     directChildren.forEach(toggleAttribute)
  // }

  function swapBurgerIconsVisibility(from: HTMLSpanElement, to: HTMLSpanElement) {
    from.style.display = 'none'
    to.style.display = 'block'
  }

  function showMenu() {
      bodyDirectChildren?.forEach(el => el.setAttribute('inert', ''))
      navigation?.classList.add('show-navigation')
      navigation?.removeAttribute('inert')
      btnBurger?.setAttribute('aria-expanded', 'true')
      btnBurger?.setAttribute('aria-label', "сховати меню")
      swapBurgerIconsVisibility(iconBurger!, iconClose!)
  }

  function hideMenu() {
      bodyDirectChildren?.forEach(el => el.removeAttribute('inert'))
      navigation?.classList.remove('show-navigation')
      navigation?.setAttribute('inert', '')
      btnBurger?.setAttribute('aria-expanded', 'false')
      btnBurger?.setAttribute('aria-label', "показати меню")
      swapBurgerIconsVisibility(iconClose!, iconBurger!)
  }

  function toggleMenu() {
      if (!isMenuOpened()) { showMenu() } 
      else  { hideMenu() }
  }

  function updateNavbar(hasMobileAppearance: boolean) {
      if (hasMobileAppearance) {
          navigation?.setAttribute('inert', '')
          navigation?.addEventListener('click', hideMenu)
          navLinks?.forEach(link => link.addEventListener('click', hideMenu))
          btnBurger?.removeAttribute('inert')
      } else {
          navigation?.removeAttribute('inert')
          navigation?.removeEventListener('click', hideMenu)
          navLinks?.forEach(link => link.removeEventListener('click', hideMenu))
          btnBurger?.setAttribute('inert', '')
      }
  }

  function onMediaQueryChange(e: MediaQueryListEvent) {
    const hasMobileMenuAppearance = e.matches
      if (isMenuOpened()) hideMenu()
      updateNavbar(hasMobileMenuAppearance)
  }

  // function onScreenOrientationChange(e: Event) {
  //     const screen = e.target
  //     if (screen && 'type' in screen) {
  //         const isScreenOrientationLandscape = screen.type === 'landscape-primary' || 'landscape-secondary'     
  //         if (!isScreenOrientationLandscape) return
  //         hideMenu()
  //     }
  // }

  // function onWindowResize(e: Event) {
  //     if (e.target instanceof Window) { 
  //       const browserWindow = e.target
  //       const isMenuMobile = browserWindow.matchMedia(MEDIA_MOBILE)
  //         if (isMenuMobile) return
  //         toggleMenu()
  //     }
  // }

    updateNavbar(media.matches)
    btnBurger?.addEventListener('click', toggleMenu)
    media.addEventListener('change', onMediaQueryChange)
    // screen.orientation.addEventListener('change', onScreenOrientationChange)
    // window.addEventListener('resize', onWindowResize)
</script>

<style is:global>
  .nav__burger {
    --width: 63px;
    --height: 42px;
    --radius: calc(var(--height) / 2);
      width: var(--width);
      height: var(--height);
      background-color: var(--color-burger);
      border: 0;
      border-radius: var(--radius);
      overflow: hidden;
      z-index: 110;
      transition: outline 250ms ease;
  }

  button.nav__burger:is(:hover, :focus) {
      outline: 2px solid var(--swatch-neutral-200);
  }

  .icon-burger, .icon-close {
      display: inline-block;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
      background-position: center;
  }
  .icon-burger {
      background-image: url("/images/icons/menu-burger.svg");
  }
  .icon-close {
      background-image: url("/images/icons/menu-cross.svg");
  }

  /* 29.75em */
@media screen and (width > 35rem) {
  .nav__burger {
      display: none;
  }
} 
</style>