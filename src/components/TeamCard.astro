---
import { Picture } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

interface Props {
  mate: CollectionEntry<'mates'>
  startAngle: string
}

const {startAngle} = Astro.props
const { fullname, position, image, extra } = Astro.props.mate.data

const endAngle = `${parseInt(startAngle) + 359}deg`;
const alt = `${fullname}, ${position}`
---

<figure class="team__card" tabindex="-1">
  <Picture  class='picture__image' 
            src={image} alt={alt}
            width={300} height={300}
            formats={['avif', 'webp']}
            fallbackFormat='jpg'
            densities={[1.5, 1.8, 2, 3]}
            pictureAttributes={{class: "card__picture"}}
            />
  <figcaption class="card__caption">
    <h3 class="card__name">{fullname}</h3>
    <p class="card__position">{position}</p>
    { extra?.info && <p class="card__extra info">{extra.info}</p>}
    { extra?.exp && <p class="card__extra exp">{extra.exp}</p> }
  </figcaption>
</figure>

<style is:global define:vars={{startAngle, endAngle}}>
@property --r-factor {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --endAngle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

.team__card { 
    grid-row: span 5;
    display: grid;
    grid-template-rows: subgrid;
    isolation: isolate;
}

.card__picture { grid-row: span 1; }
.card__caption { grid-row: span 4; }


.card__picture {
  display: grid;
  grid-template-areas: 'avatar';
  max-inline-size: 90%;
  margin-inline: auto;

  @media (width < 24.5em) {
    max-inline-size: 50%;
  }
}

.card__picture::before,
.card__picture::after {
  content: '';
  grid-area: avatar;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  transform-origin: center;
  transform: 
    scale(var(--s-factor, 1)) 
    rotateZ(var(--r-factor, 0deg));
  animation: hidSpinning 100s infinite linear alternate;
}

.card__picture::before {
  --s-factor: 1.125;
  --r-factor: var(--startAngle);
    background-image: url('/images/team/hid-inner-opt.svg');
    animation-direction: alternate-reverse;
}
.card__picture::after {
  --s-factor: 1.175;
  --r-factor: calc(-1 * var(--startAngle));
    background-image: url('/images/team/hid-outer-opt.svg');
}

.picture__image {
    grid-area: avatar;
    aspect-ratio: 1;
    border-radius: 100%;
    transition: all 350ms ease;
}

.card__caption {
    display: grid;
    grid-template-rows: subgrid;
    margin-block-start: 1em;

    @media (width < 24.5em) {
      margin-inline-start: 1.75em;
    }
}
.card__name {
  --f-size: var(--typo-size-300);
  --f-weight: 400;
    font-size: var(--f-size, 1rem);
    font-weight: var(--f-weight);
    text-wrap: balance;
}

.card__position, 
.card__extra {
  --text-color: var(--swatch-neutral-350);
  --f-size: var(--typo-size-250);
  --f-line: var(--typo-line-200);
    color: var(--text-color);
    font-size: var(--f-size);
    line-height: var(--f-line);
    text-wrap: balance;
    margin-block-start: .25em;
}

.card__extra {
  margin-block-start: .5em;
  text-wrap: balance;
  opacity: .5;
}

@media screen and (width > 48em) {
.card__name {
  --f-size: var(--typo-size-600);
}

.card__position {
  --f-size: var(--typo-size-400);
}
}

@keyframes hidSpinning {
  to {
    --r-factor: var(--endAngle);
  }
}
</style>